@page "/"
@namespace D2TTravDstarvRev.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>D2TTravDstarvRev</title>
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
</head>
<body>
    <app>
        <component type="typeof(App)" render-mode="ServerPrerendered" />
    </app>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script>
        //examples for Page => Text.razor
        window.exampleJsFunctions = {
            showPrompt: function (text) {
                return prompt(text, 'Type your name here');
            },

            displayWelcome: function (welcomeMessage) {
                document.getElementById('welcome').innerText = welcomeMessage;
            },

            returnArrayAsyncJs: function () {
                DotNet.invokeMethodAsync('D2TTravDstarvRev', 'ReturnArrayAsync')
                    .then(data => {
                        data.push(4);
                        console.log(data);
                    });
            },

            sayHello: function (dotnetHelper) {
                return dotnetHelper.invokeMethodAsync('SayHello')
                    .then(r => console.log(r));
            }
        };
    </script>
    <script>        
        //Game start here (triggered from CSharp page => Game.razor)
        function initializeFromCSharp(instance) {
            window.theInstance = instance;
            window.requestAnimationFrame(gameLoop);
        }

        function gameLoop(timeStamp) {
            window.requestAnimationFrame(gameLoop);

            window.onkeydown = e => {
                //console.info(e);
                return window.theInstance.invokeMethodAsync('CSharpOnKeyDown', e.keyCode);
            };

            window.onkeyup = e => {
                //console.info(e);
                return window.theInstance.invokeMethodAsync('CSharpOnKeyUp', e.keyCode);
            };

            theInstance.invokeMethodAsync('CSharpGameLoop', timeStamp);
        }
    </script>
</body>
</html>
